(
)
[
]
{
}
.
=
;
,
import
package
message
extend
service
rpc
enum
returns
option
group
extensions
true
false
required
optional
repeated
to
max
double
float
int32
int64
uint32
uint64
sint32
sint64
fixed32
fixed64
sfixed32
sfixed64
bool
string
bytes
------
OPEN_PARANT#(
WHITE_SPACE#\r\n
CLOSE_PARANT#)
WHITE_SPACE#\r\n
OPEN_BRACE#[
WHITE_SPACE#\r\n
CLOSE_BRACE#]
WHITE_SPACE#\r\n
OPEN_BLOCK#{
WHITE_SPACE#\r\n
CLOSE_BLOCK#}
WHITE_SPACE#\r\n
DOT#.
WHITE_SPACE#\r\n
EQUAL#=
WHITE_SPACE#\r\n
SEMICOLON#;
WHITE_SPACE#\r\n
COMMA#,
WHITE_SPACE#\r\n
IMPORT#import
WHITE_SPACE#\r\n
PACKAGE#package
WHITE_SPACE#\r\n
MESSAGE#message
WHITE_SPACE#\r\n
EXTEND#extend
WHITE_SPACE#\r\n
SERVICE#service
WHITE_SPACE#\r\n
RPC#rpc
WHITE_SPACE#\r\n
ENUM#enum
WHITE_SPACE#\r\n
RETURNS#returns
WHITE_SPACE#\r\n
OPTION#option
WHITE_SPACE#\r\n
GROUP#group
WHITE_SPACE#\r\n
EXTENSIONS#extensions
WHITE_SPACE#\r\n
TRUE#true
WHITE_SPACE#\r\n
FALSE#false
WHITE_SPACE#\r\n
REQUIRED#required
WHITE_SPACE#\r\n
OPTIONAL#optional
WHITE_SPACE#\r\n
REPEATED#repeated
WHITE_SPACE#\r\n
TO#to
WHITE_SPACE#\r\n
MAX#max
WHITE_SPACE#\r\n
DOUBLE#double
WHITE_SPACE#\r\n
FLOAT#float
WHITE_SPACE#\r\n
INT32#int32
WHITE_SPACE#\r\n
INT64#int64
WHITE_SPACE#\r\n
UINT32#uint32
WHITE_SPACE#\r\n
UINT64#uint64
WHITE_SPACE#\r\n
SINT32#sint32
WHITE_SPACE#\r\n
SINT64#sint64
WHITE_SPACE#\r\n
FIXED32#fixed32
WHITE_SPACE#\r\n
FIXED64#fixed64
WHITE_SPACE#\r\n
SFIXED32#sfixed32
WHITE_SPACE#\r\n
SFIXED4#sfixed64
WHITE_SPACE#\r\n
BOOL#bool
WHITE_SPACE#\r\n
STRING#string
WHITE_SPACE#\r\n
BYTES#bytes