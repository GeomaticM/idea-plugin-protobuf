
#Parser error messages
semicolon.expected=';' expected
open.brace.expected='[' expected
close.brace.expected=']' expected
open.parant.expected='(' expected
close.parant.expected=')' expected
open.block.expected='}' expected
close.block.expected='{' expected
identifier.expected=Identifier expected
identifier.or.dot.expected=Identifier or '.' expected
identifier.or.open.parant.expected = identifier or '(' expected
comma.expected=',' expected
dot.expected='.' expected
equal.expected='=' expected
num.integer.expected=num integer expected
constant.literal.expected='.' expected
user.defined.type.expected=user defined type expected
type.expected=type expected
returns.expected='returns' expected
string.literal.expected=string literal expected
top.level.def.expected=any top level definition expected


#Annotator errors
unresolved.import=unresolved import

message.block.expected= message block expected
option.assigment.expected= option assigment expected

unexpected.token=unexpected token

#Options menu
protobuf.full=Google Protocol Buffers
protobuf.settings=Google Protocol Buffers settings
protobuf.settings.compiler=compiler settings
path.to.protoc=Path to Protocol Buffers compiler
protobuf.application.settings=Protocol Buffers Application Settings

#Enum
enum.block.expected=Enum block expected

#Service
service.block.expected=Service block expected


#actions
action.newfile.text=Proto File
action.newfile.description=Create a new Protocol Buffers File
action.newfile.dialog.title=Create a new Protocol Buffers File
action.newfile.dialog.promt=Enter a new Protocol Buffers file name

file.template.group.title=Protocol Buffers